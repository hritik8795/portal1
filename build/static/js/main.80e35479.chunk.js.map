{"version":3,"sources":["logo.svg","redux/actions/jobActions..js","components/Filter.js","components/DefaultLayout.js","pages/Home.js","pages/JobInfo.js","pages/AppliedJobs.js","pages/PostJob.js","pages/Profile.js","redux/actions/userActions.js","pages/Register.js","pages/Login.js","pages/PostedJobs.js","pages/EditJob.js","pages/UserInfo.js","App.js","reportWebVitals.js","redux/reducers/jobsReducer.js","redux/reducers/loaderReducer.js","redux/reducers/usersReducer.js","redux/store.js","index.js"],"names":["getAllJobs","dispatch","a","type","payload","axios","get","response","data","console","log","Search","Input","Option","Select","Filter","useState","isModalVisible","setIsModalVisible","useDispatch","handleCancel","className","onSearch","value","searchKey","jobs","filteredJobs","filter","job","title","toLowerCase","includes","FilterOutlined","onClick","footer","visible","onOk","onCancel","closable","layout","onFinish","values","undefined","experience","salary","salaryTo","sortJobs","Item","name","label","htmlType","Header","Layout","Sider","Content","DefaultLayout","props","toggle","setState","collapsed","state","logout","localStorage","removeItem","window","location","reload","user","JSON","parse","getItem","trigger","collapsible","this","style","position","overflow","height","top","theme","mode","defaultSelectedKeys","pathname","icon","HomeOutlined","to","UserOutlined","PlusSquareOutlined","PlusOutlined","CheckOutlined","LogoutOutlined","padding","zIndex","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","display","username","margin","minHeight","children","Component","Home","useSelector","jobsReducer","useEffect","gutter","map","lg","sm","company","smallDescription","salaryFrom","marginLeft","_id","moment","createdAt","format","JobInfo","match","find","params","id","userid","alreadyApplied","appliedCandidates","candidate","fullDescription","skillsRequired","minimumQualification","department","companyDescription","length","postedBy","color","post","message","success","setTimeout","href","applyJob","AppliedJobs","userAppliedJobs","temp","obj","appliedDate","push","columns","dataIndex","dataSource","TextArea","TabPane","Tabs","PostJob","jobInfo","setJobInfo","activeTab","setActiveTab","defaultActiveKey","activeKey","tab","rules","required","rows","finalObj","postJob","Profile","personalInfo","setPersonalInfo","initialValues","setItem","stringify","error","updateUser","List","education","add","remove","field","index","width","skills","projects","AOS","init","Register","justify","password","confirmpassword","registerUser","Login","loginUser","PostedJobs","alljobs","allusers","usersReducer","users","userPostedJobs","history","useHistory","selectedJob","setSelectedJob","render","text","EditOutlined","fontSize","completeJobData","OrderedListOutlined","showModal","postedOn","CandidatesList","candidatesColumns","candidateId","candidatesDatasource","fullName","firstName","lastName","EditJob","editJob","UserInfo","email","mobileNumber","address","skill","project","App","loader","loaderReducer","path","exact","component","ProtectedRoute","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.80e35479.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { message } from \"antd\";\nimport axios from \"axios\";\nexport const getAllJobs = () => async (dispatch) => {\n  dispatch({ type: \"LOADING\", payload: true });\n  try {\n    const response = await axios.get(\"/api/jobs/getalljobs\");\n    dispatch({ type: \"GET_ALL_JOBS\", payload: response.data });\n    dispatch({ type: \"LOADING\", payload: false });\n  } catch (error) {\n    console.log(error);\n    dispatch({ type: \"LOADING\", payload: false });\n  }\n};\n\nexport const postJob = (values) => async (dispatch) => {\n  values.postedBy = JSON.parse(localStorage.getItem(\"user\"))._id;\n\n  dispatch({ type: \"LOADING\", payload: true });\n  try {\n    const response = await axios.post(\"/api/jobs/postjob\", values);\n\n    dispatch({ type: \"LOADING\", payload: false });\n    message.success(\"Job Posted Successfully\");\n\n    setTimeout(() => {\n      window.location.href = \"/\";\n    }, 1000);\n  } catch (error) {\n    console.log(error);\n    dispatch({ type: \"LOADING\", payload: false });\n  }\n};\n\nexport const editJob = (values) => async (dispatch) => {\n  dispatch({ type: \"LOADING\", payload: true });\n  try {\n    const response = await axios.post(\"/api/jobs/editjob\", values);\n\n    dispatch({ type: \"LOADING\", payload: false });\n    message.success(\"Job Updated Successfully\");\n\n    setTimeout(() => {\n      window.location.href = \"/\";\n    }, 1000);\n  } catch (error) {\n    console.log(error);\n    dispatch({ type: \"LOADING\", payload: false });\n  }\n};\n\n\nexport const applyJob = (job) => async (dispatch) => {\n\n\n  const user = JSON.parse(localStorage.getItem(\"user\"))\n\n  dispatch({ type: \"LOADING\", payload: true });\n  try {\n    const response = await axios.post(\"/api/jobs/applyjob\", {job , user});\n\n    dispatch({ type: \"LOADING\", payload: false });\n    message.success(\"Job applied Successfully\");\n\n    setTimeout(() => {\n      window.location.href = \"/\";\n    }, 1000);\n  } catch (error) {\n    console.log(error);\n    dispatch({ type: \"LOADING\", payload: false });\n  }\n};\n\n\n\nexport const searchJobs = (searchKey) => async (dispatch) => {\n  dispatch({ type: \"LOADING\", payload: true });\n  try {\n    const response = await axios.get(\"/api/jobs/getalljobs\");\n\n    const jobs = response.data\n\n    const filteredJobs = jobs.filter(job=>job.title.toLowerCase().includes(searchKey.toLowerCase()))\n\n    dispatch({ type: \"GET_ALL_JOBS\", payload: filteredJobs });\n    dispatch({ type: \"LOADING\", payload: false });\n  } catch (error) {\n    console.log(error);\n    dispatch({ type: \"LOADING\", payload: false });\n  }\n};\n\n\nexport const sortJobs = (values) => async (dispatch) => {\n  dispatch({ type: \"LOADING\", payload: true });\n  try {\n    const response = await axios.get(\"/api/jobs/getalljobs\");\n\n    const jobs = response.data\n\n    var filteredJobs = jobs\n\n    if(values.experience !== undefined) {\n\n         filteredJobs = jobs.filter(job=>job.experience <= values.experience)\n\n    }\n    if(values.salary!==undefined){\n      filteredJobs = jobs.filter(job=>job.salaryTo >= values.salary)\n    }\n\n    dispatch({ type: \"GET_ALL_JOBS\", payload: filteredJobs });\n    dispatch({ type: \"LOADING\", payload: false });\n  } catch (error) {\n    console.log(error);\n    dispatch({ type: \"LOADING\", payload: false });\n  }\n};\n\n\n\n","import { Input, Modal , Form , Select , Button} from \"antd\";\nimport React, { useState } from \"react\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n  FilterOutlined,\n} from \"@ant-design/icons\";\nimport { useDispatch } from \"react-redux\";\nimport { searchJobs, sortJobs } from \"../redux/actions/jobActions.\";\n\nconst { Search } = Input;\nconst {Option} = Select;\nfunction Filter() {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const dispatch = useDispatch()\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  function sort(values){\n\n     dispatch(sortJobs(values))\n\n     handleCancel()\n\n  }\n  return (\n    <div className=\"flex\">\n      <Search onSearch={(value)=>{dispatch(searchJobs(value))}}/>\n      <FilterOutlined onClick={showModal}/>\n\n      <Modal title=\"Select filters\" footer={false} visible={isModalVisible} onOk={handleOk} onCancel={handleCancel} closable={false}>\n          <Form layout='vertical' onFinish={sort}>\n                <Form.Item name='experience' label='Experipence'>\n\n                    <Select>\n                        <Option value={0}>Fresher</Option>\n                        <Option value={1}>1 Year</Option>\n                        <Option value={2}>2 Years</Option>\n                        <Option value={3}>3 Years</Option>\n                        <Option value={4}>4 Years</Option>\n                        <Option value={5}>5 Years</Option>\n\n                    </Select>\n\n                </Form.Item>\n\n                <Form.Item name='salary' label='Salary'>\n\n                    <Select>\n                        <Option value={10000}>10000+</Option>\n                        <Option value={15000}>15000+</Option>\n                        <Option value={25000}>25000+</Option>\n                        <Option value={35000}>35000+</Option>\n                        <Option value={50000}>50000+</Option>\n                        <Option value={70000}>70000+</Option>\n\n                    </Select>\n\n                </Form.Item>\n                <Button htmlType=\"submit\">Filter</Button>\n          </Form>\n      </Modal>\n    </div>\n  );\n}\n\nexport default Filter;\n","import { Layout, Menu } from \"antd\";\nimport React from \"react\";\n\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  PlusSquareOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n  HomeOutlined,\n  UserOutlined,\n  PlusOutlined,\n  CheckOutlined,\n  LogoutOutlined,\n} from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport Filter from \"./Filter\";\n\nconst { Header, Sider, Content } = Layout;\n\nclass DefaultLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: false,\n    };\n  }\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  logout = () => {\n    localStorage.removeItem(\"user\");\n    window.location.reload();\n  };\n\n  render() {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    return (\n      <Layout>\n        <Sider\n          trigger={null}\n          collapsible\n          collapsed={this.state.collapsed}\n          style={{\n            position: \"sticky\",\n            overflow: \"auto\",\n            height: \"100%\",\n            top: 0,\n          }}\n        >\n          <div className=\"logo\">\n            {this.state.collapsed ? <h1>ABS</h1> : <h1>ABS JOB PORTAL</h1>}\n          </div>\n          <Menu\n            theme=\"dark\"\n            mode=\"inline\"\n            defaultSelectedKeys={[window.location.pathname]}\n          >\n            <Menu.Item key=\"/\" icon={<HomeOutlined />}>\n              <Link to=\"/\">Home</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/profile\" icon={<UserOutlined />}>\n              <Link to=\"/profile\">Profile</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/appliedjobs\" icon={<PlusSquareOutlined />}>\n              <Link to=\"/appliedjobs\">Applied Jobs</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/postjob\" icon={<PlusOutlined />}>\n              <Link to=\"/postjob\">Post Job</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/posted\" icon={<CheckOutlined />}>\n              <Link to=\"/posted\">Posted</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"/logout\" icon={<LogoutOutlined />}>\n              <Link onClick={this.logout}>Logout</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <Header\n            className=\"site-layout-background\"\n            style={{\n              padding: 0,\n              position: \"sticky\",\n              overflow: \"auto\",\n              top: 0,\n              zIndex: 9999,\n            }}\n          >\n            <div className=\"flex justify-content-between\">\n              <div>\n                {React.createElement(\n                  this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n                  {\n                    className: \"trigger\",\n                    onClick: this.toggle,\n                  }\n                )}\n              </div>\n\n              <div>\n                <Filter />\n              </div>\n\n              <div\n                style={{ display: this.state.collapsed ? \"none\" : \"inline\" }}\n              >\n                <h5 className=\"mr-2\">\n                  <b>{user.username}</b>\n                </h5>\n              </div>\n            </div>\n          </Header>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              margin: \"24px 16px\",\n              padding: 24,\n              minHeight: 280,\n            }}\n          >\n            {this.props.children}\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default DefaultLayout;\n","import React, { useEffect } from \"react\";\nimport DefaultLayout from \"../components/DefaultLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllJobs } from \"../redux/actions/jobActions.\";\nimport { Row, Col , Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nfunction Home() {\n  const { jobs } = useSelector((state) => state.jobsReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllJobs());\n  }, []);\n\n  return (\n    <div>\n      <DefaultLayout>\n        <Row gutter={16}>\n          {jobs.map((job) => {\n           return <Col lg={12} sm={24}>\n                <div className=\"job-div bs m-2 p-2\">\n                   <h4>{job.title}</h4>\n                   <p>{job.company}</p>\n                   <hr />\n                   <p>{job.smallDescription}</p>\n                   <div className=\"flex\">\n                   <p>Salary : <b>{job.salaryFrom} - {job.salaryTo}</b> , </p>\n                   <p style={{marginLeft:20}}>Experience : <b>{job.experience} Years</b> </p>\n                   \n                   </div>\n                   <hr />\n\n                   <div className=\"flex justify-content-between\">\n                       <Link to={`/jobs/${job._id}`}><Button>View</Button></Link>\n                       <p>Posted on : {moment(job.createdAt).format('MMM DD yyyy')}</p>\n                   </div>\n                  \n                </div>\n            </Col>;\n          })}\n        </Row>\n      </DefaultLayout>\n    </div>\n  );\n}\n\nexport default Home;\n","import { Button , Tag} from \"antd\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport DefaultLayout from \"../components/DefaultLayout\";\nimport { applyJob } from \"../redux/actions/jobActions.\";\n\nfunction JobInfo({ match }) {\n  const { jobs } = useSelector((state) => state.jobsReducer);\n\n  const job = jobs.find((job) => job._id == match.params.id);\n\n  const userid = JSON.parse(localStorage.getItem(\"user\"))._id;\n\n  const appliedCandidates = job.appliedCandidates;\n\n  const alreadyApplied = appliedCandidates.find(\n    (candidate) => candidate.userid == userid\n  );\n\n  const dispatch = useDispatch();\n\n  function applyNow() {\n    dispatch(applyJob(job));\n  }\n\n  return (\n    <div>\n      <DefaultLayout>\n        {job && (\n          <div>\n            <p>\n              <b>Title</b> : {job.title}\n            </p>\n            <p>\n              <b>Company</b> : {job.company}\n            </p>\n\n            <p>\n              <b>Small Description</b> : {job.smallDescription}\n            </p>\n            <p>\n              <b>Full Description</b> : {job.fullDescription}\n            </p>\n            <p>\n              <b>Title</b> : {job.title}\n            </p>\n            <p>\n              <b>Skills Required</b> : {job.skillsRequired}\n            </p>\n            <p>\n              <b>Experience</b> : {job.experience}\n            </p>\n            <p>\n              <b>Minimum Qualification</b> : {job.minimumQualification}\n            </p>\n\n            <hr />\n\n            <p>\n              <b>Salary Range</b> : {job.salaryFrom} - {job.salaryTo}\n            </p>\n            <p>\n              <b>Department</b> : {job.department}\n            </p>\n            <p>\n              <b>Company Profile</b> : {job.companyDescription}\n            </p>\n            <p>\n              <b>Total Candidates applied</b> : {job.appliedCandidates.length}\n            </p>\n\n            <hr />\n\n            <div className=\"flex justify-content-between\">\n              {job.postedBy == userid ? (\n                <Button>\n                  <Link to={`/editjob/${job._id}`}>Edit Now</Link>\n                </Button>\n              ) : alreadyApplied ? (\n                <Tag color=\"green\">Already Applied</Tag>\n              ) : (\n                <Button onClick={applyNow}>Apply Now</Button>\n              )}\n              <p>\n                <b>Posted on</b> {moment(job.createdAt).format(\"MMM DD yyyy\")}\n              </p>\n            </div>\n          </div>\n        )}\n      </DefaultLayout>\n    </div>\n  );\n}\n\nexport default JobInfo;\n","import React from \"react\";\nimport DefaultLayout from \"../components/DefaultLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Table } from \"antd\";\nfunction AppliedJobs() {\n    const {jobs} = useSelector(state=>state.jobsReducer)\n\n    const user =JSON.parse(localStorage.getItem('user'))\n\n    const userAppliedJobs=[]\n\n\n    for(var job of jobs){\n\n         var appliedCandidates = job.appliedCandidates\n\n         var temp = appliedCandidates.find(candidate=>candidate.userid==user._id)\n\n        \n         if(temp){\n\n              var obj = {\n                  title : job.title,\n                  company : job.company ,\n                  appliedDate : temp.appliedDate\n              }\n\n              userAppliedJobs.push(obj)\n\n         }\n\n         \n\n    }\n\n    const columns = [\n        {\n            title : 'Job Title' , \n            dataIndex : 'title' \n        }, \n        {\n            title : 'Company' , \n            dataIndex : 'company' \n        },{\n            title : 'Applied Date' , \n            dataIndex : 'appliedDate' \n        }\n    ]\n\n    return (\n        <div>\n            <DefaultLayout>\n                   <h1>AppliedJobs</h1>\n                   <Table columns={columns} dataSource={userAppliedJobs}/>\n            </DefaultLayout>\n        </div>\n    )\n}\n\nexport default AppliedJobs","import React, { useState } from \"react\";\nimport DefaultLayout from \"../components/DefaultLayout\";\nimport { Row, Col, Form, Tabs, Input, Button, Select } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { updateUser } from \"../redux/actions/userActions\";\nimport { postJob } from \"../redux/actions/jobActions.\";\nconst { TextArea } = Input;\nconst { TabPane } = Tabs;\nconst { Option } = Select;\nfunction PostJob() {\n  const [jobInfo, setJobInfo] = useState({});\n  const [activeTab, setActiveTab] = useState(\"0\");\n  const dispatch = useDispatch()\n  function onFirstFormFinish(values) {\n    setJobInfo(values);\n    setActiveTab(\"1\");\n  }\n  function onFinalFormFinish(values) {\n      const finalObj = {...jobInfo , ...values};\n      console.log(finalObj)\n      dispatch(postJob(finalObj))\n  }\n  return (\n    <div>\n      <DefaultLayout>\n        <Tabs defaultActiveKey=\"0\" activeKey={activeTab}>\n          <TabPane tab=\"Job Info\" key=\"0\">\n            <Form layout=\"vertical\" onFinish={onFirstFormFinish}>\n              <Row gutter={16}>\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"title\"\n                    rules={[{ required: true }]}\n                    label=\"Title\"\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"department\"\n                    rules={[{ required: true }]}\n                    label=\"Department\"\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"experience\"\n                    rules={[{ required: true }]}\n                    label=\"Experience\"\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"salaryFrom\"\n                    rules={[{ required: true }]}\n                    label=\"Salary From\"\n                  >\n                    <Input type=\"number\" />\n                  </Form.Item>\n                </Col>\n\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"salaryTo\"\n                    rules={[{ required: true }]}\n                    label=\"Salary To\"\n                  >\n                    <Input type=\"number\" />\n                  </Form.Item>\n                </Col>\n              </Row>\n\n              <Row gutter={16}>\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"skillsRequired\"\n                    rules={[{ required: true }]}\n                    label=\"Skills\"\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"minimumQualification\"\n                    rules={[{ required: true }]}\n                    label=\"Minimum Qualification\"\n                  >\n                    <Select>\n                      <Option value=\"Degree\">Degree</Option>\n                      <Option value=\"Plus 2\">Plus 2</Option>\n                      <Option value=\"10th\">10th</Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n\n                <Col lg={24} sm={24}>\n                  <Form.Item\n                    name=\"smallDescription\"\n                    rules={[{ required: true }]}\n                    label=\"Small description\"\n                  >\n                    <TextArea rows={3} />\n                  </Form.Item>\n                </Col>\n\n                <Col lg={24} sm={24}>\n                  <Form.Item\n                    name=\"fullDescription\"\n                    rules={[{ required: true }]}\n                    label=\"Full description\"\n                  >\n                    <TextArea rows={6} />\n                  </Form.Item>\n                </Col>\n              </Row>\n\n              <Button htmlType=\"submit\">Next</Button>\n            </Form>\n          </TabPane>\n          <TabPane tab=\"Company Info\" key=\"1\">\n            <Form layout='vertical' onFinish={onFinalFormFinish}>\n              <Row gutter={16}>\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"company\"\n                    label=\"Company Name\"\n                    rules={[{ required: true }]}\n                  >\n                    <Input />\n                  </Form.Item>\n                  </Col>\n                  <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"email\"\n                    label=\"Company Email\"\n                    rules={[{ required: true }]}\n                  >\n                    <Input />\n                  </Form.Item>\n                  </Col>\n\n                  <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"phoneNumber\"\n                    label=\"Phone number\"\n                    rules={[{ required: true }]}\n                  >\n                    <Input />\n                  </Form.Item>\n                  </Col>\n                  <Col lg={24} sm={24}>\n                  <Form.Item\n                    name=\"companyDescription\"\n                    label=\"Company Description\"\n                    rules={[{ required: true }]}\n                  >\n                    <TextArea rows={3} />\n                  </Form.Item>\n                  </Col>\n              \n              </Row>\n              <Button onClick={()=>{setActiveTab(\"0\")}}>Previous</Button>\n              <Button htmlType=\"submit\">Post Job</Button>\n            </Form>\n          </TabPane>\n        </Tabs>\n      </DefaultLayout>\n    </div>\n  );\n}\n\nexport default PostJob;\n","import React, { useState } from \"react\";\nimport DefaultLayout from \"../components/DefaultLayout\";\nimport { Row, Col, Form, Tabs, Input, Button } from \"antd\";\nimport {useDispatch} from 'react-redux'\nimport { updateUser } from \"../redux/actions/userActions\";\nconst { TextArea } = Input;\nconst { TabPane } = Tabs;\nfunction Profile() {\n  const [personalInfo, setPersonalInfo] = useState();\n  const [activeTab, setActiveTab] = useState(\"1\");\n  const dispatch = useDispatch()\n  function onPersonInfoSubmit(values) {\n    setPersonalInfo(values);\n    console.log(values);\n    setActiveTab(\"2\");\n  }\n\n  function onFinalFinish(values){\n\n      const finalObj = {...personalInfo , ...values}\n\n      console.log(finalObj)\n\n      dispatch(updateUser(finalObj))\n\n  }\n\n  const user = JSON.parse(localStorage.getItem('user'))\n\n  return (\n    <div>\n      <DefaultLayout>\n        <Tabs defaultActiveKey=\"1\" activeKey={activeTab}>\n          <TabPane tab=\"Personal Info\" key=\"1\">\n            <Form layout=\"vertical\" onFinish={onPersonInfoSubmit} initialValues={user}>\n              <Row gutter={16}>\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    label=\"First name\"\n                    required\n                    rules={[{ required: true }]}\n                    name=\"firstName\"\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    label=\"Last name\"\n                    required\n                    rules={[{ required: true }]}\n                    name=\"lastName\"\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    label=\"Email\"\n                    required\n                    rules={[{ required: true }]}\n                    name=\"email\"\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    label=\"Mobile Number\"\n                    required\n                    rules={[{ required: true }]}\n                    name=\"mobileNumber\"\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    label=\"Portfolio\"\n                    required\n                    rules={[{ required: true }]}\n                    name=\"portfolio\"\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n                <Col lg={24} sm={24}>\n                  <Form.Item\n                    label=\"About\"\n                    required\n                    rules={[{ required: true }]}\n                    name=\"about\"\n                  >\n                    <TextArea rows={4} />\n                  </Form.Item>\n                </Col>\n                <Col lg={24} sm={24}>\n                  <Form.Item\n                    label=\"Address\"\n                    required\n                    rules={[{ required: true }]}\n                    name=\"address\"\n                  >\n                    <TextArea rows={4} />\n                  </Form.Item>\n                </Col>\n              </Row>\n              <Button htmlType=\"submit\">Next</Button>\n            </Form>\n          </TabPane>\n          <TabPane tab=\"Skills and Education\" key=\"2\">\n            <Form initialValues={user} layout=\"vertical\" onFinish={onFinalFinish}>\n              <Row>\n                <Col lg={24} sm={24}>\n                  <Form.List name=\"education\">\n                    {(education, { add, remove }) => (\n                      <div>\n                        {education.map((field , index) => (\n                          <div className=\"flex\">\n                            <Form.Item\n                              required\n                              {...field}\n                              label=\"Education\"\n                              style={{ width: \"80%\" }}\n                              rules={[{ required: true }]}\n                            >\n                              <TextArea rows={4} />\n                            </Form.Item>\n                            <Button onClick={()=>{add()}}>Add more</Button>\n                            {index !== 0 && (<Button onClick={()=>{remove(index)}}>Delete</Button>)}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </Form.List>\n                </Col>\n\n                <Col lg={24} sm={24}>\n                  <Form.List name=\"skills\">\n                    {(skills, { add, remove }) => (\n                      <div>\n                        {skills.map((field , index) => (\n                          <div className=\"flex\">\n                            <Form.Item\n                              required\n                              {...field}\n                              label=\"Skill\"\n                              style={{ width: \"80%\" }}\n                              rules={[{ required: true }]}\n                            >\n                              <TextArea rows={4} />\n                            </Form.Item>\n                            <Button onClick={()=>{add()}}>Add more</Button>\n                            {index !== 0 && (<Button onClick={()=>{remove(index)}}>Delete</Button>)}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </Form.List>\n                </Col>\n\n                <Col lg={24} sm={24}>\n                  <Form.List name=\"projects\">\n                    {(projects, { add, remove }) => (\n                      <div>\n                        {projects.map((field , index) => (\n                          <div className=\"flex\">\n                            <Form.Item\n                              required\n                              {...field}\n                              label=\"Project\"\n                              style={{ width: \"80%\" }}\n                              rules={[{ required: true }]}\n                            >\n                              <TextArea rows={4} />\n                            </Form.Item>\n                            <Button onClick={()=>{add()}}>Add more</Button>\n                            {index !== 0 && (<Button onClick={()=>{remove(index)}}>Delete</Button>)}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </Form.List>\n                </Col>\n                <Col lg={24} sm={24}>\n                  <Form.List name=\"experience\">\n                    {(experience, { add, remove }) => (\n                      <div>\n                        {experience.map((field , index) => (\n                          <div className=\"flex\">\n                            <Form.Item\n                              required\n                              {...field}\n                              label=\"Experience\"\n                              style={{ width: \"80%\" }}\n                              rules={[{ required: true }]}\n                            >\n                              <TextArea rows={4} />\n                            </Form.Item>\n                            <Button onClick={()=>{add()}}>Add more</Button>\n                            {index !== 0 && (<Button onClick={()=>{remove(index)}}>Delete</Button>)}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </Form.List>\n                </Col>\n              </Row>\n              <Button onClick={()=>{setActiveTab(\"1\")}}>Previous</Button>\n              <Button htmlType=\"submit\">Update</Button>\n            </Form>\n          </TabPane>\n        </Tabs>\n      </DefaultLayout>\n    </div>\n  );\n}\n\nexport default Profile;\n","import axios from \"axios\";\nimport { message } from \"antd\";\nexport const registerUser = (values) => async (dispatch) => {\n  dispatch({ type: \"LOADING\", payload: true });\n\n  try {\n    await axios.post(\"/api/users/register\", values);\n    message.success(\"User Registered Successfully\");\n    setTimeout(() => {\n      window.location.href = \"/login\";\n    }, 1000);\n    dispatch({ type: \"LOADING\", payload: false });\n  } catch (error) {\n    message.error(\"something went wrong , please try later\");\n    dispatch({ type: \"LOADING\", payload: false });\n  }\n};\n\nexport const loginUser = (values) => async (dispatch) => {\n  dispatch({ type: \"LOADING\", payload: true });\n\n  try {\n    const user = await axios.post(\"/api/users/login\", values);\n    message.success(\"Login success\");\n    localStorage.setItem(\"user\", JSON.stringify(user.data));\n    setTimeout(() => {\n      window.location.href = \"/\";\n    }, 1000);\n    dispatch({ type: \"LOADING\", payload: false });\n  } catch (error) {\n    message.error(\"invalid credentials\");\n    dispatch({ type: \"LOADING\", payload: false });\n  }\n};\n\nexport const updateUser = (values) => async (dispatch) => {\n  const userid = JSON.parse(localStorage.getItem(\"user\"))._id;\n\n  values._id = userid;\n\n  dispatch({ type: \"LOADING\", payload: true });\n\n  try {\n    const user = await axios.post(\"/api/users/update\", values);\n    message.success(\"User updated successfully\");\n    localStorage.setItem(\"user\", JSON.stringify(user.data));\n    setTimeout(() => {\n      window.location.reload();\n    }, 1000);\n    dispatch({ type: \"LOADING\", payload: false });\n  } catch (error) {\n    message.error(\"something went wrong , please try later\");\n    dispatch({ type: \"LOADING\", payload: false });\n  }\n};\n\nexport const getAllUsers = () => async (dispatch) => {\n  dispatch({ type: \"LOADING\", payload: true });\n  try {\n    const response = await axios.get(\"/api/users/getallusers\");\n    dispatch({ type: \"GET_ALL_USERS\", payload: response.data });\n    dispatch({ type: \"LOADING\", payload: false });\n  } catch (error) {\n    console.log(error);\n    dispatch({ type: \"LOADING\", payload: false });\n  }\n};\n","import React from \"react\";\nimport { Row, Col, Form, Input, Button, message } from \"antd\";\nimport { useDispatch } from \"react-redux\";\nimport { registerUser } from \"../redux/actions/userActions\";\nimport { Link } from \"react-router-dom\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\"; // You can also use <link> for styles\n// ..\nAOS.init();\nfunction Register() {\n  const dispatch = useDispatch();\n  function register(values) {\n    if (values.password !== values.confirmpassword) {\n      message.error(\"passwords not matched\");\n    } else {\n      console.log(values);\n      dispatch(registerUser(values));\n    }\n  }\n\n  return (\n    <div className=\"register\">\n      <Row justify=\"center\" className=\"flex align-items-center\">\n        <Col lg={5}>\n          <h1 className=\"heading1\" data-aos=\"slide-right\">\n            ABS\n          </h1>\n        </Col>\n        <Col lg={10} sm={24} className=\"bs p-5 register-form\">\n          <h3>Register</h3>\n          <hr />\n          <Form layout=\"vertical\" onFinish={register}>\n            <Form.Item\n              label=\"username\"\n              name=\"username\"\n              rules={[{ required: true }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"password\"\n              name=\"password\"\n              rules={[{ required: true }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              label=\"confirm password\"\n              name=\"confirmpassword\"\n              rules={[{ required: true }]}\n            >\n              <Input />\n            </Form.Item>\n            <Button htmlType=\"submit\" className=\"mb-3\">\n              Register\n            </Button>{\" \"}\n            <br />\n            <Link to=\"/login\" className=\"mt-3\">\n              Already registered ? , Click here to login\n            </Link>\n          </Form>\n        </Col>\n        <Col lg={5}>\n          <h1 className=\"heading2\" data-aos=\"slide-left\">\n            Jobs\n          </h1>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Register;\n","import React from \"react\";\nimport { Row, Col, Form, Input, Button } from \"antd\";\nimport { loginUser } from \"../redux/actions/userActions\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\"; // You can also use <link> for styles\n// ..\nAOS.init();\n\nfunction Login() {\n  const dispatch = useDispatch();\n  function login(values) {\n    dispatch(loginUser(values));\n  }\n  return (\n    <div className=\"login\">\n      <Row justify=\"center\" className=\"flex align-items-center\">\n        <Col lg={5}>\n          <h1 className=\"heading1\" data-aos=\"slide-left\">\n            ABS\n          </h1>\n        </Col>\n        <Col lg={10} sm={24} className=\"bs p-5 login-form\">\n          <h3>Login</h3>\n          <hr />\n          <Form layout=\"vertical\" onFinish={login}>\n            <Form.Item\n              label=\"username\"\n              name=\"username\"\n              rules={[{ required: true }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item\n              label=\"password\"\n              name=\"password\"\n              rules={[{ required: true }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Button htmlType=\"submit\" className=\"mb-3\">\n              Login\n            </Button>\n            <br />\n\n            <Link to=\"/register\" className=\"mt-3\">\n              Not registerd ? , Click here to register\n            </Link>\n          </Form>\n        </Col>\n        <Col lg={5}>\n          <h1 className=\"heading2\" data-aos=\"slide-right\">\n            Jobs\n          </h1>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport DefaultLayout from \"../components/DefaultLayout\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Table, Modal } from \"antd\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n  EditOutlined,\n  OrderedListOutlined,\n} from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport { Link, useHistory } from \"react-router-dom\";\nfunction PostedJobs() {\n  const alljobs = useSelector((state) => state.jobsReducer).jobs;\n  const allusers = useSelector((state) => state.usersReducer).users;\n  const userid = JSON.parse(localStorage.getItem(\"user\"))._id;\n  const userPostedJobs = alljobs.filter((job) => job.postedBy == userid);\n  const history = useHistory();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [selectedJob, setSelectedJob] = useState();\n\n  const columns = [\n    {\n      title: \"Title\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Company\",\n      dataIndex: \"company\",\n    },\n    {\n      title: \"Posted On\",\n      dataIndex: \"postedOn\",\n    },\n    {\n      title: \"Applied Candidates\",\n      dataIndex: \"appliedCandidates\",\n    },\n    {\n      title: \"Actions\",\n      render: (text, data) => {\n        return (\n          <div className=\"flex\">\n            <EditOutlined\n            className='mr-2'\n              style={{fontSize:20}}\n              onClick={() => {\n                history.push(`/editjob/${data.completeJobData._id}`);\n              }}\n            />\n            <OrderedListOutlined\n               style={{fontSize:20}}\n              onClick={() => {\n                \n                showModal(job);\n              }}\n            />\n          </div>\n        );\n      },\n    },\n  ];\n\n  const dataSource = [];\n\n  for (var job of userPostedJobs) {\n    var obj = {\n      title: job.title,\n      company: job.company,\n      postedOn: moment(job.createdAt).format(\"MMM DD yyyy\"),\n      appliedCandidates: job.appliedCandidates.length,\n      completeJobData: job,\n    };\n    dataSource.push(obj);\n  }\n\n  const showModal = (job) => {\n    setIsModalVisible(true);\n    setSelectedJob(job);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n function CandidatesList(){\n  const candidatesColumns = [\n    {\n      title: \"Candidate Id\",\n      dataIndex: \"candidateId\",\n      render : (text ,data)=>{\n       return <Link to={`/users/${data.candidateId}`}>{data.candidateId}</Link>\n      }\n    },\n    {\n      title: \"Full Name\",\n      dataIndex: \"fullName\",\n    },\n    { title: \"Applied Date\", dataIndex: \"appliedDate\" },\n  ];\n\n  var candidatesDatasource = [];\n\n  for (var candidate of selectedJob.appliedCandidates) {\n    var user = allusers.find((user) => user._id == candidate.userid);\n\n    var obj = {\n      candidateId: user._id,\n      fullName: user.firstName + \" \" + user.lastName,\n      appliedDate: candidate.appliedDate,\n    };\n\n    candidatesDatasource.push(obj);\n  }\n\n  return <Table\n  columns={candidatesColumns}\n  dataSource={candidatesDatasource}\n/>\n }\n\n  console.log(userPostedJobs);\n  return (\n    <div>\n      <DefaultLayout>\n        <h1>Posted Jobs</h1>\n\n        <Table columns={columns} dataSource={dataSource} />\n\n        <Modal\n          title=\"Applied Candidates List\"\n          visible={isModalVisible}\n          closable={false}\n          onOk={handleOk}\n          onCancel={handleCancel}\n          width={800}\n        >\n          <CandidatesList/>\n        </Modal>\n      </DefaultLayout>\n    </div>\n  );\n}\n\nexport default PostedJobs;\n","import React, { useState } from \"react\";\nimport DefaultLayout from \"../components/DefaultLayout\";\nimport { Row, Col, Form, Tabs, Input, Button, Select } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUser } from \"../redux/actions/userActions\";\nimport { editJob, postJob } from \"../redux/actions/jobActions.\";\nconst { TextArea } = Input;\nconst { TabPane } = Tabs;\nconst { Option } = Select;\nfunction EditJob({match}) {\n  const [jobInfo, setJobInfo] = useState({});\n  const [activeTab, setActiveTab] = useState(\"0\");\n  const dispatch = useDispatch()\n  function onFirstFormFinish(values) {\n    setJobInfo(values);\n    setActiveTab(\"1\");\n  }\n  function onFinalFormFinish(values) {\n      const finalObj = {...jobInfo , ...values};\n\n      finalObj._id = match.params.id\n      console.log(finalObj)\n      dispatch(editJob(finalObj))\n  }\n\n\n  const {jobs} = useSelector(state=>state.jobsReducer)\n\n  const job = jobs.find(job=>job._id==match.params.id)\n\n  console.log(job)\n\n  return (\n    <div>\n      <DefaultLayout>\n        <Tabs defaultActiveKey=\"0\" activeKey={activeTab}>\n          <TabPane tab=\"Job Info\" key=\"0\">\n            <Form layout=\"vertical\" onFinish={onFirstFormFinish} initialValues={job}>\n              <Row gutter={16}>\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"title\"\n                    rules={[{ required: true }]}\n                    label=\"Title\"\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"department\"\n                    rules={[{ required: true }]}\n                    label=\"Department\"\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"experience\"\n                    rules={[{ required: true }]}\n                    label=\"Experience\"\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"salaryFrom\"\n                    rules={[{ required: true }]}\n                    label=\"Salary From\"\n                  >\n                    <Input type=\"number\" />\n                  </Form.Item>\n                </Col>\n\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"salaryTo\"\n                    rules={[{ required: true }]}\n                    label=\"Salary To\"\n                  >\n                    <Input type=\"number\" />\n                  </Form.Item>\n                </Col>\n              </Row>\n\n              <Row gutter={16}>\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"skillsRequired\"\n                    rules={[{ required: true }]}\n                    label=\"Skills\"\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"minimumQualification\"\n                    rules={[{ required: true }]}\n                    label=\"Minimum Qualification\"\n                  >\n                    <Select>\n                      <Option value=\"Degree\">Degree</Option>\n                      <Option value=\"Plus 2\">Plus 2</Option>\n                      <Option value=\"10th\">10th</Option>\n                    </Select>\n                  </Form.Item>\n                </Col>\n\n                <Col lg={24} sm={24}>\n                  <Form.Item\n                    name=\"smallDescription\"\n                    rules={[{ required: true }]}\n                    label=\"Small description\"\n                  >\n                    <TextArea rows={3} />\n                  </Form.Item>\n                </Col>\n\n                <Col lg={24} sm={24}>\n                  <Form.Item\n                    name=\"fullDescription\"\n                    rules={[{ required: true }]}\n                    label=\"Full description\"\n                  >\n                    <TextArea rows={6} />\n                  </Form.Item>\n                </Col>\n              </Row>\n\n              <Button htmlType=\"submit\">Next</Button>\n            </Form>\n          </TabPane>\n          <TabPane tab=\"Company Info\" key=\"1\">\n            <Form layout='vertical' onFinish={onFinalFormFinish} initialValues={job}>\n              <Row gutter={16}>\n                <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"company\"\n                    label=\"Company Name\"\n                    rules={[{ required: true }]}\n                  >\n                    <Input />\n                  </Form.Item>\n                  </Col>\n                  <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"email\"\n                    label=\"Company Email\"\n                    rules={[{ required: true }]}\n                  >\n                    <Input />\n                  </Form.Item>\n                  </Col>\n\n                  <Col lg={8} sm={24}>\n                  <Form.Item\n                    name=\"phoneNumber\"\n                    label=\"Phone number\"\n                    rules={[{ required: true }]}\n                  >\n                    <Input />\n                  </Form.Item>\n                  </Col>\n                  <Col lg={24} sm={24}>\n                  <Form.Item\n                    name=\"companyDescription\"\n                    label=\"Company Description\"\n                    rules={[{ required: true }]}\n                  >\n                    <TextArea rows={3} />\n                  </Form.Item>\n                  </Col>\n              \n              </Row>\n              <Button onClick={()=>{setActiveTab(\"0\")}}>Previous</Button>\n              <Button htmlType=\"submit\">Edit Job</Button>\n            </Form>\n          </TabPane>\n        </Tabs>\n      </DefaultLayout>\n    </div>\n  );\n}\n\nexport default EditJob;\n","import React from \"react\";\nimport DefaultLayout from \"../components/DefaultLayout\";\nimport { useSelector } from \"react-redux\";\nfunction UserInfo({ match }) {\n  const { users } = useSelector((state) => state.usersReducer);\n\n  const user = users.find((user) => user._id == match.params.id);\n  return (\n    <div>\n      <DefaultLayout>\n        {user && (\n          <div>\n            <h3>\n              <b>Personal inforamtion</b>\n            </h3>\n            <p>\n              <b>First name : </b>\n              {user.firstName}\n            </p>\n            <p>\n              <b>Last name : </b>\n              {user.lastName}\n            </p>\n            <p>\n              <b>Email : </b>\n              {user.email}\n            </p>\n            <p>\n              <b>Mobile Number : </b>\n              {user.mobileNumber}\n            </p>\n            <p>\n              <b>Address : </b>\n              {user.address}\n            </p>\n\n            <hr />\n            <h3>\n              <b>Skills</b>\n            </h3>\n\n            {user.skills.map((skill) => {\n              return <li>{skill}</li>;\n            })}\n\n            <hr />\n            <h3>\n              <b>Education</b>\n            </h3>\n            {user.education.map((education) => {\n              return <li>{education}</li>;\n            })}\n            <hr />\n\n            <h3>\n              <b>Projects</b>\n            </h3>\n            {user.projects.map((project) => {\n              return <li>{project}</li>;\n            })}\n\n            <hr />\n            <h3>\n              <b>Experience</b>\n            </h3>\n            {user.experience.map((experience) => {\n              return <li>{experience}</li>;\n            })}\n          </div>\n        )}\n      </DefaultLayout>\n    </div>\n  );\n}\n\nexport default UserInfo;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { Button } from \"antd\";\nimport Home from \"./pages/Home\";\nimport JobInfo from \"./pages/JobInfo\";\nimport { BrowserRouter, Redirect, Route } from \"react-router-dom\";\nimport AppliedJobs from \"./pages/AppliedJobs\";\nimport PostJob from \"./pages/PostJob\";\nimport Profile from \"./pages/Profile\";\nimport { css } from \"@emotion/react\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllJobs } from \"./redux/actions/jobActions.\";\nimport { useEffect } from \"react\";\nimport Register from \"./pages/Register\";\nimport Login from \"./pages/Login\";\nimport PostedJobs from \"./pages/PostedJobs\";\nimport EditJob from \"./pages/EditJob\";\nimport { getAllUsers } from \"./redux/actions/userActions\";\nimport UserInfo from \"./pages/UserInfo\";\n\nfunction App() {\n  const { loader } = useSelector((state) => state.loaderReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllJobs());\n    dispatch(getAllUsers())\n  }, []);\n  return (\n    <div className=\"App\">\n      {loader && (\n        <div className=\"sweet-loading text-center\">\n          <FadeLoader color={\"#001529\"} />\n        </div>\n      )}\n\n      <BrowserRouter>\n        <Route path=\"/login\" exact component={Login} />\n        <Route path=\"/register\" exact component={Register} />\n\n        <ProtectedRoute path=\"/\" exact component={Home} />\n        <ProtectedRoute path=\"/appliedjobs\" exact component={AppliedJobs} />\n        <ProtectedRoute path=\"/postjob\" exact component={PostJob} />\n\n        <ProtectedRoute path=\"/profile\" exact component={Profile} />\n        <ProtectedRoute path=\"/jobs/:id\" exact component={JobInfo} />\n\n        <ProtectedRoute path=\"/posted\" exact component={PostedJobs} />\n\n        <ProtectedRoute path=\"/editjob/:id\" exact component={EditJob} />\n        <ProtectedRoute path=\"/users/:id\" exact component={UserInfo} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\nexport function ProtectedRoute(props) {\n  const user = localStorage.getItem(\"user\");\n\n  if (!user) {\n    return <Redirect to=\"/login\" />;\n  } else {\n   return <Route {...props} />;\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n\n    jobs : []\n\n}\n\nexport const jobsReducer=(state=initialState , action)=>{\n\n     \n    switch (action.type)\n    {\n        case 'GET_ALL_JOBS' : return{\n            ...state,\n            jobs : action.payload\n        }\n        default : return state\n    }\n     \n\n}","const initialState = {\n    loader : false\n}\n\nexport const loaderReducer=(state=initialState , action)=>{\n\n    switch(action.type){\n        case 'LOADING' : {\n            return{\n                ...state , \n                loader : action.payload\n            }\n        }\n        default : return state\n    }\n\n}","const initialState = {\n    users : []\n}\n\nexport const usersReducer=(state=initialState , action)=>{\n\n\n     switch(action.type){\n         case 'GET_ALL_USERS' : return{\n                ...state ,\n                users : action.payload\n            }\n         \n         default: return state\n     }\n  \n\n\n}","import { combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, applyMiddleware } from \"redux\";\n\nimport thunk from \"redux-thunk\";\nimport { jobsReducer } from \"./reducers/jobsReducer\";\nimport { loaderReducer } from \"./reducers/loaderReducer\";\nimport { usersReducer } from \"./reducers/usersReducer\";\n\n\n\nconst rootReducer = combineReducers({\n  jobsReducer: jobsReducer,\n  loaderReducer : loaderReducer,\n  usersReducer: usersReducer,\n})\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}